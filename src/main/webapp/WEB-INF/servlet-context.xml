<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

  <!-- Enable @Controller annotation support -->
  <mvc:annotation-driven />

  <!-- Map simple view name such as "test" into /WEB-INF/views/test.jsp -->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/" />
    <property name="suffix" value=".jsp" />
  </bean>
  
  <!-- Scan classpath for annotations (eg: @Service, @Repository etc) -->
  <context:component-scan base-package="com.university"/>
  <!--<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
    <!--<property name="driverClassName" value="com.mysql.jdbc.Driver"/>-->
    <!--<property name="url" value="jdbc:mysql://localhost:3306/univ"/>-->
    <!--<property name="username" value="root"/>-->
    <!--<property name="password" value="123qwee"/>-->
    <!--<property name="validationQuery" value="SELECT 1"/>-->
  <!--</bean>-->

  <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="org.postgresql.Driver"/>
    <property name="url" value="jdbc:postgresql://localhost:5432/univ"/>
    <property name="username" value="postgres"/>
    <property name="password" value="123qwee"/>
    <property name="validationQuery" value="SELECT 1"/>
  </bean>

  <!--<session-factory>-->
    <!--<property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>-->
    <!--<property name="connection.driver_class">org.postgresql.Driver</property>-->
    <!--<property name="connection.url">jdbc:postgresql://host:port/database</property>-->
    <!--<property name="connection.username">username</property>-->
    <!--<property name="connection.password">password</property>-->

    <!--<property name="cache.provider_class">org.hibernate.cache.HashtableCacheProvider</property>-->

    <!--<property name="transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</property>-->
    <!--<property name="current_session_context_class">thread</property>-->
    <!--<property name="hibernate.show_sql">false</property>-->
  <!--</session-factory>-->



  <!-- Hibernate Session Factory -->
  <bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="myDataSource"/>
    <property name="packagesToScan">
      <array>
        <value>com.university</value>
      </array>
    </property>
    <property name="hibernateProperties">
      <value>
        <!--hibernate.dialect=org.hibernate.dialect.MySQLDialect-->
        hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect

      </value>


    </property>

  </bean>
  
  <!-- Hibernate Transaction Manager -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <property name="sessionFactory" ref="mySessionFactory"/>
  </bean>
  
  <!-- Activates annotation based transaction management -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
